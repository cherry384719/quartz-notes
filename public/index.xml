<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>S+Zn</title>
      <link>https://quartz.jzhao.xyz</link>
      <description>Last 10 notes on S+Zn</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Symbol 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Symbol-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Symbol-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ Symbol 是 ES6 引入的一种原始数据类型（primitive type），用于创建唯一的标识符。 一、基本概念 const sym1 = Symbol(); const sym2 = Symbol(); console.log(sym1 === sym2); // false Symbol() 每次调用都会生成一个唯一的值。 不可通过 new Symbol() 创建 —— 会抛出 TypeError。 二、使用场景 1. ]]></description>
    <pubDate>Fri, 08 Aug 2025 10:05:18 GMT</pubDate>
  </item><item>
    <title>Object 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Object-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Object-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ 在 JavaScript 中，对象（Object）是一种复合数据类型，是所有复杂数据结构的基础。它是一个无序的键值对（key-value pair）集合，其中键是字符串或 Symbol，值可以是任何数据类型，包括其他对象。深入理解 Object 对于掌握 JavaScript至关重要。 1. ]]></description>
    <pubDate>Fri, 08 Aug 2025 10:00:33 GMT</pubDate>
  </item><item>
    <title>操作符</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%AC%A6</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%AC%A6</guid>
    <description><![CDATA[  ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:59:42 GMT</pubDate>
  </item><item>
    <title>String 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/String-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/String-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ JavaScript 的 String 类型用于表示和操作一系列字符。 1. ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:46:02 GMT</pubDate>
  </item><item>
    <title>BigInt 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/BigInt-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/BigInt-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ BigInt 是一个数字原始类型，可以表示并安全地操作任意精度的整数，突破了 Number 类型的整数范围限制。 用途： 处理需要超出 Number.MAX_SAFE_INTEGER (2^53 - 1) 的大整数运算，例如高精度时间戳、大数据或加密算法中。 示例： // 在数字末尾加上 &#039;n&#039; 来创建 BigInt const veryLargeNumber = 90071992547409919007199254740991n; const result = veryLargeNumber * 2n; console.log(result); // 输出: 180143... ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:33:20 GMT</pubDate>
  </item><item>
    <title>Number 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Number-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Number-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ 1. ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:30:58 GMT</pubDate>
  </item><item>
    <title>Boolean 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Boolean-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Boolean-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ 1. ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:21:24 GMT</pubDate>
  </item><item>
    <title>Null 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Null-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Null-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ null 类型只有一个值 null。它代表一个被开发者明确赋予的“空值”或“无对象”。 用途：作为变量的初始值，表示该变量未来将指向一个对象，但现在还没有；或者用于清空一个对象变量。 示例： let selectedUser = null; // 明确表示当前没有选中的用户 // .. ]]></description>
    <pubDate>Fri, 08 Aug 2025 09:00:58 GMT</pubDate>
  </item><item>
    <title>Undefined 类型</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Undefined-%E7%B1%BB%E5%9E%8B</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Undefined-%E7%B1%BB%E5%9E%8B</guid>
    <description><![CDATA[ undefined 类型只有一个值 undefined。它表示一个变量已被声明，但还从来没有被赋值。 出现场景: 一个变量被声明了但没有初始化（赋值）。 尝试访问一个对象上不存在的属性。 一个函数没有明确的 return 语句，或者 return 后面没有值。 示例： let user; console.log(user); // 输出: undefined const car = { brand: &#039;Toyota&#039; }; console.log(car.model); // 输出: undefined function doNothing() { // 没有 return... ]]></description>
    <pubDate>Fri, 08 Aug 2025 08:58:16 GMT</pubDate>
  </item><item>
    <title>typeof 操作符</title>
    <link>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/typeof-%E6%93%8D%E4%BD%9C%E7%AC%A6</link>
    <guid>https://quartz.jzhao.xyz/01-program/JavaScript/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/typeof-%E6%93%8D%E4%BD%9C%E7%AC%A6</guid>
    <description><![CDATA[ 1. typeof 操作符概述 typeof 是 JavaScript 中的一个一元操作符，用于检测变量或表达式的数据类型。它返回一个表示操作数类型的字符串。 基本语法 typeof operand typeof(operand) // 括号是可选的 2. ]]></description>
    <pubDate>Fri, 08 Aug 2025 08:56:46 GMT</pubDate>
  </item>
    </channel>
  </rss>